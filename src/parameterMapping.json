{
  "DomainResource": {},
  "Resource": {
    "_id": "id",
    "_lastUpdated": "meta.lastUpdated",
    "_profile": "meta.profile",
    "_security": "meta.security",
    "_source": "meta.source",
    "_tag": "meta.tag"
  },
  "Account": {
    "identifier": "identifier",
    "name": "name",
    "owner": "owner",
    "patient": "subject.where(resolve() is Patient)",
    "period": "servicePeriod",
    "status": "status",
    "subject": "subject",
    "type": "type"
  },
  "ActivityDefinition": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "AdverseEvent": {
    "actuality": "actuality",
    "category": "category",
    "date": "date",
    "event": "event",
    "location": "location",
    "recorder": "recorder",
    "resultingcondition": "resultingCondition",
    "seriousness": "seriousness",
    "severity": "severity",
    "study": "study",
    "subject": "subject",
    "substance": "suspectEntity.instance"
  },
  "AllergyIntolerance": {
    "asserter": "asserter",
    "category": "category",
    "clinical-status": "clinicalStatus",
    "code": "code",
    "criticality": "criticality",
    "date": "recordedDate",
    "identifier": "identifier",
    "last-date": "lastOccurrence",
    "manifestation": "reaction.manifestation",
    "onset": "reaction.onset",
    "patient": "patient",
    "recorder": "recorder",
    "route": "reaction.exposureRoute",
    "severity": "reaction.severity",
    "type": "type",
    "verification-status": "verificationStatus"
  },
  "Condition": {
    "code": "code",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "abatement-age": "abatement.as(Age)",
    "abatement-date": "abatement.as(dateTime)",
    "abatement-string": "abatement.as(string)",
    "asserter": "asserter",
    "body-site": "bodySite",
    "category": "category",
    "clinical-status": "clinicalStatus",
    "encounter": "encounter",
    "evidence": "evidence.code",
    "evidence-detail": "evidence.detail",
    "onset-age": "onset.as(Age)",
    "onset-date": "onset.as(dateTime)",
    "onset-info": "onset.as(string)",
    "recorded-date": "recordedDate",
    "severity": "severity",
    "stage": "stage.summary",
    "subject": "subject",
    "verification-status": "verificationStatus"
  },
  "DeviceRequest": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "authored-on": "authoredOn",
    "based-on": "basedOn",
    "group-identifier": "groupIdentifier",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "insurance": "insurance",
    "intent": "intent",
    "performer": "performer",
    "prior-request": "priorRequest",
    "requester": "requester",
    "status": "status",
    "subject": "subject"
  },
  "DiagnosticReport": {
    "code": "code",
    "date": "effective",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "based-on": "basedOn",
    "category": "category",
    "conclusion": "conclusionCode",
    "issued": "issued",
    "media": "media.link",
    "performer": "performer",
    "result": "result",
    "results-interpreter": "resultsInterpreter",
    "specimen": "specimen",
    "status": "status",
    "subject": "subject"
  },
  "FamilyMemberHistory": {
    "code": "condition.code",
    "date": "date",
    "identifier": "identifier",
    "patient": "patient",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "relationship": "relationship",
    "sex": "sex",
    "status": "status"
  },
  "List": {
    "code": "code",
    "date": "date",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "empty-reason": "emptyReason",
    "item": "entry.item",
    "notes": "note.text",
    "source": "source",
    "status": "status",
    "subject": "subject",
    "title": "title"
  },
  "Medication": {
    "code": "code",
    "expiration-date": "batch.expirationDate",
    "form": "form",
    "identifier": "identifier",
    "lot-number": "batch.lotNumber",
    "manufacturer": "manufacturer",
    "status": "status"
  },
  "MedicationAdministration": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "context": "context",
    "device": "device",
    "effective-time": "effective",
    "performer": "performer.actor",
    "reason-given": "reasonCode",
    "reason-not-given": "statusReason",
    "request": "request",
    "status": "status",
    "subject": "subject"
  },
  "MedicationDispense": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "status": "status",
    "context": "context",
    "destination": "destination",
    "performer": "performer.actor",
    "prescription": "authorizingPrescription",
    "receiver": "receiver",
    "responsibleparty": "substitution.responsibleParty",
    "subject": "subject",
    "type": "type",
    "whenhandedover": "whenHandedOver",
    "whenprepared": "whenPrepared"
  },
  "MedicationRequest": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "status": "status",
    "authoredon": "authoredOn",
    "category": "category",
    "date": "dosageInstruction.timing.event",
    "encounter": "encounter",
    "intended-dispenser": "dispenseRequest.performer",
    "intended-performer": "performer",
    "intended-performertype": "performerType",
    "intent": "intent",
    "priority": "priority",
    "requester": "requester",
    "subject": "subject",

    "reason-reference": "reasonReference"
  },
  "MedicationStatement": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "status": "status",
    "category": "category",
    "context": "context",
    "effective": "effective",
    "part-of": "partOf",
    "source": "informationSource",
    "subject": "subject"
  },
  "Observation": {
    "code": "code",
    "date": "effective",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "based-on": "basedOn",
    "category": "category",
    "combo-code": "code",
    "combo-data-absent-reason": "dataAbsentReason",
    "component-code": "component.code",
    "component-data-absent-reason": "component.dataAbsentReason",
    "data-absent-reason": "dataAbsentReason",
    "derived-from": "derivedFrom",
    "device": "device",
    "focus": "focus",
    "has-member": "hasMember",
    "method": "method",
    "part-of": "partOf",
    "performer": "performer",
    "specimen": "specimen",
    "status": "status",
    "subject": "subject",
    "code-value-concept": "",
    "code-value-date": "",
    "code-value-quantity": "",
    "code-value-string": "",
    "combo-code-value-concept": "",
    "combo-code-value-quantity": "",
    "component-code-value-concept": "component",
    "component-code-value-quantity": "component"
  },
  "Procedure": {
    "code": "code",
    "date": "performed",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "based-on": "basedOn",
    "category": "category",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "location": "location",
    "part-of": "partOf",
    "performer": "performer.actor",
    "reason-code": "reasonCode",
    "reason-reference": "reasonReference",
    "status": "status",
    "subject": "subject"
  },
  "ServiceRequest": {
    "code": "code",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "authored": "authoredOn",
    "based-on": "basedOn",
    "body-site": "bodySite",
    "category": "category",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "intent": "intent",
    "occurrence": "occurrence",
    "performer": "performer",
    "performer-type": "performerType",
    "priority": "priority",
    "replaces": "replaces",
    "requester": "requester",
    "requisition": "requisition",
    "specimen": "specimen",
    "status": "status",
    "subject": "subject"
  },
  "CarePlan": {
    "date": "period",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "activity-code": "activity.detail.code",
    "activity-date": "activity.detail.scheduled",
    "activity-reference": "activity.reference",
    "based-on": "basedOn",
    "care-team": "careTeam",
    "category": "category",
    "condition": "addresses",
    "encounter": "encounter",
    "goal": "goal",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "intent": "intent",
    "part-of": "partOf",
    "performer": "activity.detail.performer",
    "replaces": "replaces",
    "status": "status",
    "subject": "subject"
  },
  "CareTeam": {
    "date": "period",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "category": "category",
    "encounter": "encounter",
    "participant": "participant.member",
    "status": "status",
    "subject": "subject"
  },
  "ClinicalImpression": {
    "date": "date",
    "patient": "subject.where(resolve() is Patient)",
    "assessor": "assessor",
    "encounter": "encounter",
    "finding-code": "finding.itemCodeableConcept",
    "finding-ref": "finding.itemReference",
    "identifier": "identifier",
    "investigation": "investigation.item",
    "previous": "previous",
    "problem": "problem",
    "status": "status",
    "subject": "subject",
    "supporting-info": "supportingInfo"
  },
  "Composition": {
    "date": "date",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "type": "type",
    "attester": "attester.party",
    "author": "author",
    "category": "category",
    "confidentiality": "confidentiality",
    "context": "event.code",
    "encounter": "encounter",
    "entry": "section.entry",
    "period": "event.period",
    "section": "section.code",
    "status": "status",
    "subject": "subject",
    "title": "title"
  },
  "Consent": {
    "date": "dateTime",
    "identifier": "identifier",
    "patient": "patient",
    "action": "provision.action",
    "actor": "provision.actor.reference",
    "category": "category",
    "consentor": "performer",
    "data": "provision.data.reference",
    "organization": "organization",
    "period": "provision.period",
    "purpose": "provision.purpose",
    "scope": "scope",
    "security-label": "provision.securityLabel",
    "source-reference": "source",
    "status": "status"
  },
  "Encounter": {
    "date": "period",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "type": "type",
    "account": "account",
    "appointment": "appointment",
    "based-on": "basedOn",
    "class": "class",
    "diagnosis": "diagnosis.condition",
    "episode-of-care": "episodeOfCare",
    "length": "length",
    "location": "location.location",
    "location-period": "location.period",
    "part-of": "partOf",
    "participant": "participant.individual",
    "participant-type": "participant.type",
    "practitioner": "participant.individual.where(resolve() is Practitioner)",
    "reason-code": "reasonCode",
    "reason-reference": "reasonReference",
    "service-provider": "serviceProvider",
    "special-arrangement": "hospitalization.specialArrangement",
    "status": "status",
    "subject": "subject"
  },
  "EpisodeOfCare": {
    "date": "period",
    "identifier": "identifier",
    "patient": "patient",
    "type": "type",
    "care-manager": "careManager.where(resolve() is Practitioner)",
    "condition": "diagnosis.condition",
    "incoming-referral": "referralRequest",
    "organization": "managingOrganization",
    "status": "status"
  },
  "Flag": {
    "date": "period",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "author": "author",
    "identifier": "identifier",
    "subject": "subject"
  },
  "Immunization": {
    "date": "occurrence",
    "identifier": "identifier",
    "patient": "patient",
    "location": "location",
    "lot-number": "lotNumber",
    "manufacturer": "manufacturer",
    "performer": "performer.actor",
    "reaction": "reaction.detail",
    "reaction-date": "reaction.date",
    "reason-code": "reasonCode",
    "reason-reference": "reasonReference",
    "series": "protocolApplied.series",
    "status": "status",
    "status-reason": "statusReason",
    "target-disease": "protocolApplied.targetDisease",
    "vaccine-code": "vaccineCode"
  },
  "RiskAssessment": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "encounter": "encounter",
    "condition": "condition",
    "method": "method",
    "performer": "performer",
    "probability": "prediction.probability",
    "risk": "prediction.qualitativeRisk",
    "subject": "subject"
  },
  "SupplyRequest": {
    "date": "authoredOn",
    "identifier": "identifier",
    "category": "category",
    "requester": "requester",
    "status": "status",
    "subject": "deliverTo",
    "supplier": "supplier"
  },
  "DetectedIssue": {
    "identifier": "identifier",
    "patient": "patient",
    "author": "author",
    "code": "code",
    "identified": "identified",
    "implicated": "implicated"
  },
  "DocumentManifest": {
    "identifier": "masterIdentifier",
    "patient": "subject.where(resolve() is Patient)",
    "type": "type",
    "author": "author",
    "created": "created",
    "description": "description",
    "item": "content",
    "recipient": "recipient",
    "related-id": "related.identifier",
    "related-ref": "related.ref",
    "source": "source",
    "status": "status",
    "subject": "subject"
  },
  "DocumentReference": {
    "identifier": "masterIdentifier",
    "patient": "subject.where(resolve() is Patient)",
    "type": "type",
    "encounter": "context.encounter",
    "authenticator": "authenticator",
    "author": "author",
    "category": "category",
    "contenttype": "content.attachment.contentType",
    "custodian": "custodian",
    "date": "date",
    "description": "description",
    "event": "context.event",
    "facility": "context.facilityType",
    "format": "content.format",
    "language": "content.attachment.language",
    "location": "content.attachment.url",
    "period": "context.period",
    "related": "context.related",
    "relatesto": "relatesTo.target",
    "relation": "relatesTo.code",
    "security-label": "securityLabel",
    "setting": "context.practiceSetting",
    "status": "status",
    "subject": "subject",
    "relationship": "relatesTo"
  },
  "Goal": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "achievement-status": "achievementStatus",
    "category": "category",
    "lifecycle-status": "lifecycleStatus",
    "subject": "subject"
  },
  "ImagingStudy": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "basedon": "basedOn",
    "bodysite": "series.bodySite",
    "dicom-class": "series.instance.sopClass",
    "encounter": "encounter",
    "endpoint": "endpoint",
    "instance": "series.instance.uid",
    "interpreter": "interpreter",
    "modality": "series.modality",
    "performer": "series.performer.actor",
    "reason": "reasonCode",
    "referrer": "referrer",
    "series": "series.uid",
    "started": "started",
    "status": "status",
    "subject": "subject"
  },
  "NutritionOrder": {
    "identifier": "identifier",
    "patient": "patient",
    "encounter": "encounter",
    "additive": "enteralFormula.additiveType",
    "datetime": "dateTime",
    "formula": "enteralFormula.baseFormulaType",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "oraldiet": "oralDiet.type",
    "provider": "orderer",
    "status": "status",
    "supplement": "supplement.type"
  },
  "SupplyDelivery": {
    "identifier": "identifier",
    "patient": "patient",
    "receiver": "receiver",
    "status": "status",
    "supplier": "supplier"
  },
  "VisionPrescription": {
    "identifier": "identifier",
    "patient": "patient",
    "encounter": "encounter",
    "datewritten": "dateWritten",
    "prescriber": "prescriber",
    "status": "status"
  },
  "DeviceUseStatement": {
    "patient": "subject",
    "device": "device",
    "identifier": "identifier",
    "subject": "subject"
  },
  "Appointment": {
    "actor": "participant.actor",
    "appointment-type": "appointmentType",
    "based-on": "basedOn",
    "date": "start",
    "identifier": "identifier",
    "location": "participant.actor.where(resolve() is Location)",
    "part-status": "participant.status",
    "patient": "participant.actor.where(resolve() is Patient)",
    "practitioner": "participant.actor.where(resolve() is Practitioner)",
    "reason-code": "reasonCode",
    "reason-reference": "reasonReference",
    "service-category": "serviceCategory",
    "service-type": "serviceType",
    "slot": "slot",
    "specialty": "specialty",
    "status": "status",
    "supporting-info": "supportingInformation"
  },
  "AppointmentResponse": {
    "actor": "actor",
    "appointment": "appointment",
    "identifier": "identifier",
    "location": "actor.where(resolve() is Location)",
    "part-status": "participantStatus",
    "patient": "actor.where(resolve() is Patient)",
    "practitioner": "actor.where(resolve() is Practitioner)"
  },
  "AuditEvent": {
    "action": "action",
    "address": "agent.network.address",
    "agent": "agent.who",
    "agent-name": "agent.name",
    "agent-role": "agent.role",
    "altid": "agent.altId",
    "date": "recorded",
    "entity": "entity.what",
    "entity-name": "entity.name",
    "entity-role": "entity.role",
    "entity-type": "entity.type",
    "outcome": "outcome",
    "patient": "agent.who.where(resolve() is Patient)",
    "policy": "agent.policy",
    "site": "source.site",
    "source": "source.observer",
    "subtype": "subtype",
    "type": "type"
  },
  "Basic": {
    "author": "author",
    "code": "code",
    "created": "created",
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "subject": "subject"
  },
  "BodyStructure": {
    "identifier": "identifier",
    "location": "location",
    "morphology": "morphology",
    "patient": "patient"
  },
  "Bundle": {
    "composition": "entry[0].resource",
    "identifier": "identifier",
    "message": "entry[0].resource",
    "timestamp": "timestamp",
    "type": "type"
  },
  "CapabilityStatement": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "fhirversion": "version",
    "format": "format",
    "guide": "implementationGuide",
    "jurisdiction": "jurisdiction",
    "mode": "rest.mode",
    "name": "name",
    "publisher": "publisher",
    "resource": "rest.resource.type",
    "resource-profile": "rest.resource.profile",
    "security-service": "rest.security.service",
    "software": "software.name",
    "status": "status",
    "supported-profile": "rest.resource.supportedProfile",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "CodeSystem": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "code": "concept.code",
    "content-mode": "content",
    "identifier": "identifier",
    "language": "concept.designation.language",
    "supplements": "supplements",
    "system": "url"
  },
  "CompartmentDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "code": "code",
    "resource": "resource.code"
  },
  "ConceptMap": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "identifier": "identifier",
    "dependson": "group.element.target.dependsOn.property",
    "other": "group.unmapped.url",
    "product": "group.element.target.product.property",
    "source-code": "group.element.code",
    "source-system": "group.source",
    "target-code": "group.element.target.code",
    "target-system": "group.target"
  },
  "GraphDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "start": "start"
  },
  "ImplementationGuide": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "depends-on": "dependsOn.uri",
    "experimental": "experimental",
    "global": "global.profile",
    "resource": "definition.resource.reference"
  },
  "MessageDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "identifier": "identifier",
    "category": "category",
    "event": "event",
    "focus": "focus.code",
    "parent": "parent"
  },
  "NamingSystem": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "contact": "contact.name",
    "id-type": "uniqueId.type",
    "kind": "kind",
    "period": "uniqueId.period",
    "responsible": "responsible",
    "telecom": "contact.telecom",
    "type": "type",
    "value": "uniqueId.value"
  },
  "OperationDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "base": "base",
    "code": "code",
    "input-profile": "inputProfile",
    "instance": "instance",
    "kind": "kind",
    "output-profile": "outputProfile",
    "system": "system",
    "type": "type"
  },
  "SearchParameter": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "base": "base",
    "code": "code",
    "component": "component.definition",
    "derived-from": "derivedFrom",
    "target": "target",
    "type": "type"
  },
  "StructureDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "identifier": "identifier",
    "abstract": "abstract",
    "base": "baseDefinition",
    "base-path": "snapshot.element.base.path",
    "derivation": "derivation",
    "experimental": "experimental",
    "ext-context": "context.type",
    "keyword": "keyword",
    "kind": "kind",
    "path": "snapshot.element.path",
    "type": "type",
    "valueset": "snapshot.element.binding.valueSet"
  },
  "StructureMap": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "identifier": "identifier"
  },
  "TerminologyCapabilities": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "ValueSet": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext",
    "identifier": "identifier",
    "code": "expansion.contains.code",
    "expansion": "expansion.identifier",
    "reference": "compose.include.system"
  },
  "ChargeItem": {
    "account": "account",
    "code": "code",
    "context": "context",
    "entered-date": "enteredDate",
    "enterer": "enterer",
    "factor-override": "factorOverride",
    "identifier": "identifier",
    "occurrence": "occurrence",
    "patient": "subject.where(resolve() is Patient)",
    "performer-actor": "performer.actor",
    "performer-function": "performer.function",
    "performing-organization": "performingOrganization",
    "price-override": "priceOverride",
    "quantity": "quantity",
    "requesting-organization": "requestingOrganization",
    "service": "service",
    "subject": "subject"
  },
  "ChargeItemDefinition": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Claim": {
    "care-team": "careTeam.provider",
    "created": "created",
    "detail-udi": "item.detail.udi",
    "encounter": "item.encounter",
    "enterer": "enterer",
    "facility": "facility",
    "identifier": "identifier",
    "insurer": "insurer",
    "item-udi": "item.udi",
    "patient": "patient",
    "payee": "payee.party",
    "priority": "priority",
    "procedure-udi": "procedure.udi",
    "provider": "provider",
    "status": "status",
    "subdetail-udi": "item.detail.subDetail.udi",
    "use": "use"
  },
  "ClaimResponse": {
    "created": "created",
    "disposition": "disposition",
    "identifier": "identifier",
    "insurer": "insurer",
    "outcome": "outcome",
    "patient": "patient",
    "payment-date": "payment.date",
    "request": "request",
    "requestor": "requestor",
    "status": "status",
    "use": "use"
  },
  "Communication": {
    "based-on": "basedOn",
    "category": "category",
    "encounter": "encounter",
    "identifier": "identifier",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "medium": "medium",
    "part-of": "partOf",
    "patient": "subject.where(resolve() is Patient)",
    "received": "received",
    "recipient": "recipient",
    "sender": "sender",
    "sent": "sent",
    "status": "status",
    "subject": "subject"
  },
  "CommunicationRequest": {
    "authored": "authoredOn",
    "based-on": "basedOn",
    "category": "category",
    "encounter": "encounter",
    "group-identifier": "groupIdentifier",
    "identifier": "identifier",
    "medium": "medium",
    "patient": "subject.where(resolve() is Patient)",
    "priority": "priority",
    "recipient": "recipient",
    "replaces": "replaces",
    "requester": "requester",
    "sender": "sender",
    "status": "status",
    "subject": "subject"
  },
  "Contract": {
    "authority": "authority",
    "domain": "domain",
    "identifier": "identifier",
    "instantiates": "instantiatesUri",
    "issued": "issued",
    "patient": "subject.where(resolve() is Patient)",
    "signer": "signer.party",
    "status": "status",
    "subject": "subject",
    "url": "url"
  },
  "Coverage": {
    "beneficiary": "beneficiary",
    "class-type": "class.type",
    "class-value": "class.value",
    "dependent": "dependent",
    "identifier": "identifier",
    "patient": "beneficiary",
    "payor": "payor",
    "policy-holder": "policyHolder",
    "status": "status",
    "subscriber": "subscriber",
    "type": "type"
  },
  "CoverageEligibilityRequest": {
    "created": "created",
    "enterer": "enterer",
    "facility": "facility",
    "identifier": "identifier",
    "patient": "patient",
    "provider": "provider",
    "status": "status"
  },
  "CoverageEligibilityResponse": {
    "created": "created",
    "disposition": "disposition",
    "identifier": "identifier",
    "insurer": "insurer",
    "outcome": "outcome",
    "patient": "patient",
    "request": "request",
    "requestor": "requestor",
    "status": "status"
  },
  "Device": {
    "device-name": "deviceName.name",
    "identifier": "identifier",
    "location": "location",
    "manufacturer": "manufacturer",
    "model": "modelNumber",
    "organization": "owner",
    "patient": "patient",
    "status": "status",
    "type": "type",
    "udi-carrier": "udiCarrier.carrierHRF",
    "udi-di": "udiCarrier.deviceIdentifier",
    "url": "url"
  },
  "DeviceDefinition": {
    "identifier": "identifier",
    "parent": "parentDevice",
    "type": "type"
  },
  "DeviceMetric": {
    "category": "category",
    "identifier": "identifier",
    "parent": "parent",
    "source": "source",
    "type": "type"
  },
  "EffectEvidenceSynthesis": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Endpoint": {
    "connection-type": "connectionType",
    "identifier": "identifier",
    "name": "name",
    "organization": "managingOrganization",
    "payload-type": "payloadType",
    "status": "status"
  },
  "EnrollmentRequest": {
    "identifier": "identifier",
    "patient": "candidate",
    "status": "status",
    "subject": "candidate"
  },
  "EnrollmentResponse": {
    "identifier": "identifier",
    "request": "request",
    "status": "status"
  },
  "EventDefinition": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Evidence": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "EvidenceVariable": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "ExampleScenario": {
    "context-type": "useContext.code",
    "date": "date",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "ExplanationOfBenefit": {
    "care-team": "careTeam.provider",
    "claim": "claim",
    "coverage": "insurance.coverage",
    "created": "created",
    "detail-udi": "item.detail.udi",
    "disposition": "disposition",
    "encounter": "item.encounter",
    "enterer": "enterer",
    "facility": "facility",
    "identifier": "identifier",
    "item-udi": "item.udi",
    "patient": "patient",
    "payee": "payee.party",
    "procedure-udi": "procedure.udi",
    "provider": "provider",
    "status": "status",
    "subdetail-udi": "item.detail.subDetail.udi"
  },
  "Group": {
    "actual": "actual",
    "characteristic": "characteristic.code",
    "code": "code",
    "exclude": "characteristic.exclude",
    "identifier": "identifier",
    "managing-entity": "managingEntity",
    "member": "member.entity",
    "type": "type",
    "characteristic-value": "characteristic"
  },
  "GuidanceResponse": {
    "identifier": "identifier",
    "patient": "subject.where(resolve() is Patient)",
    "request": "requestIdentifier",
    "subject": "subject"
  },
  "HealthcareService": {
    "active": "active",
    "characteristic": "characteristic",
    "coverage-area": "coverageArea",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "location": "location",
    "name": "name",
    "organization": "providedBy",
    "program": "program",
    "service-category": "category",
    "service-type": "type",
    "specialty": "specialty"
  },
  "ImmunizationEvaluation": {
    "date": "date",
    "dose-status": "doseStatus",
    "identifier": "identifier",
    "immunization-event": "immunizationEvent",
    "patient": "patient",
    "status": "status",
    "target-disease": "targetDisease"
  },
  "ImmunizationRecommendation": {
    "date": "date",
    "identifier": "identifier",
    "information": "recommendation.supportingPatientInformation",
    "patient": "patient",
    "status": "recommendation.forecastStatus",
    "support": "recommendation.supportingImmunization",
    "target-disease": "recommendation.targetDisease",
    "vaccine-type": "recommendation.vaccineCode"
  },
  "InsurancePlan": {
    "address": "contact.address",
    "address-city": "contact.address.city",
    "address-country": "contact.address.country",
    "address-postalcode": "contact.address.postalCode",
    "address-state": "contact.address.state",
    "address-use": "contact.address.use",
    "administered-by": "administeredBy",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "owned-by": "ownedBy",
    "phonetic": "name",
    "status": "status",
    "type": "type"
  },
  "Invoice": {
    "account": "account",
    "date": "date",
    "identifier": "identifier",
    "issuer": "issuer",
    "participant": "participant.actor",
    "participant-role": "participant.role",
    "patient": "subject.where(resolve() is Patient)",
    "recipient": "recipient",
    "status": "status",
    "subject": "subject",
    "totalgross": "totalGross",
    "totalnet": "totalNet",
    "type": "type"
  },
  "Library": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "content-type": "content.contentType",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "type": "type",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Linkage": {
    "author": "author",
    "item": "item.resource",
    "source": "item.resource"
  },
  "Location": {
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "name": "name",
    "near": "position",
    "operational-status": "operationalStatus",
    "organization": "managingOrganization",
    "partof": "partOf",
    "status": "status",
    "type": "type"
  },
  "Measure": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "MeasureReport": {
    "date": "date",
    "evaluated-resource": "evaluatedResource",
    "identifier": "identifier",
    "measure": "measure",
    "patient": "subject.where(resolve() is Patient)",
    "period": "period",
    "reporter": "reporter",
    "status": "status",
    "subject": "subject"
  },
  "Media": {
    "based-on": "basedOn",
    "created": "created",
    "device": "device",
    "encounter": "encounter",
    "identifier": "identifier",
    "modality": "modality",
    "operator": "operator",
    "patient": "subject.where(resolve() is Patient)",
    "site": "bodySite",
    "status": "status",
    "subject": "subject",
    "type": "type",
    "view": "view"
  },
  "MedicationKnowledge": {
    "classification": "medicineClassification.classification",
    "classification-type": "medicineClassification.type",
    "code": "code",
    "doseform": "doseForm",
    "manufacturer": "manufacturer",
    "monitoring-program-name": "monitoringProgram.name",
    "monitoring-program-type": "monitoringProgram.type",
    "monograph": "monograph.source",
    "monograph-type": "monograph.type",
    "source-cost": "cost.source",
    "status": "status"
  },
  "MedicinalProduct": {
    "identifier": "identifier",
    "name": "name.productName",
    "name-language": "name.countryLanguage.language"
  },
  "MedicinalProductAuthorization": {
    "country": "country",
    "holder": "holder",
    "identifier": "identifier",
    "status": "status",
    "subject": "subject"
  },
  "MedicinalProductContraindication": { "subject": "subject" },
  "MedicinalProductIndication": { "subject": "subject" },
  "MedicinalProductInteraction": { "subject": "subject" },
  "MedicinalProductPackaged": {
    "identifier": "identifier",
    "subject": "subject"
  },
  "MedicinalProductPharmaceutical": {
    "identifier": "identifier",
    "route": "routeOfAdministration.code",
    "target-species": "routeOfAdministration.targetSpecies.code"
  },
  "MedicinalProductUndesirableEffect": { "subject": "subject" },
  "MessageHeader": {
    "author": "author",
    "code": "response.code",
    "destination": "destination.name",
    "destination-uri": "destination.endpoint",
    "enterer": "enterer",
    "event": "event",
    "focus": "focus",
    "receiver": "destination.receiver",
    "response-id": "response.identifier",
    "responsible": "responsible",
    "sender": "sender",
    "source": "source.name",
    "source-uri": "source.endpoint",
    "target": "destination.target"
  },
  "MolecularSequence": {
    "chromosome": "referenceSeq.chromosome",
    "identifier": "identifier",
    "patient": "patient",
    "referenceseqid": "referenceSeq.referenceSeqId",
    "type": "type",
    "variant-end": "variant.end",
    "variant-start": "variant.start",
    "window-end": "referenceSeq.windowEnd",
    "window-start": "referenceSeq.windowStart",
    "chromosome-variant-coordinate": "variant",
    "chromosome-window-coordinate": "referenceSeq",
    "referenceseqid-variant-coordinate": "variant",
    "referenceseqid-window-coordinate": "referenceSeq"
  },
  "Organization": {
    "active": "active",
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "name": "name",
    "partof": "partOf",
    "phonetic": "name",
    "type": "type"
  },
  "OrganizationAffiliation": {
    "active": "active",
    "date": "period",
    "email": "telecom.where(system='email')",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "location": "location",
    "network": "network",
    "participating-organization": "participatingOrganization",
    "phone": "telecom.where(system='phone')",
    "primary-organization": "organization",
    "role": "code",
    "service": "healthcareService",
    "specialty": "specialty",
    "telecom": "telecom"
  },
  "Patient": {
    "active": "active",
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "birthdate": "birthDate",
    "deceased": "deceased.exists() and Patient.deceased != false",
    "email": "telecom.where(system='email')",
    "family": "name.family",
    "gender": "gender",
    "general-practitioner": "generalPractitioner",
    "given": "name.given",
    "identifier": "identifier",
    "language": "communication.language",
    "link": "link.other",
    "name": "name",
    "organization": "managingOrganization",
    "phone": "telecom.where(system='phone')",
    "phonetic": "name",
    "telecom": "telecom"
  },
  "Person": {
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "birthdate": "birthDate",
    "email": "telecom.where(system='email')",
    "gender": "gender",
    "phone": "telecom.where(system='phone')",
    "phonetic": "name",
    "telecom": "telecom",
    "identifier": "identifier",
    "link": "link.target",
    "name": "name",
    "organization": "managingOrganization",
    "patient": "link.target.where(resolve() is Patient)",
    "practitioner": "link.target.where(resolve() is Practitioner)",
    "relatedperson": "link.target.where(resolve() is RelatedPerson)"
  },
  "Practitioner": {
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "email": "telecom.where(system='email')",
    "family": "name.family",
    "gender": "gender",
    "given": "name.given",
    "phone": "telecom.where(system='phone')",
    "phonetic": "name",
    "telecom": "telecom",
    "active": "active",
    "communication": "communication",
    "identifier": "identifier",
    "name": "name"
  },
  "RelatedPerson": {
    "address": "address",
    "address-city": "address.city",
    "address-country": "address.country",
    "address-postalcode": "address.postalCode",
    "address-state": "address.state",
    "address-use": "address.use",
    "birthdate": "birthDate",
    "email": "telecom.where(system='email')",
    "gender": "gender",
    "phone": "telecom.where(system='phone')",
    "phonetic": "name",
    "telecom": "telecom",
    "active": "active",
    "identifier": "identifier",
    "name": "name",
    "patient": "patient",
    "relationship": "relationship"
  },
  "PractitionerRole": {
    "email": "telecom.where(system='email')",
    "phone": "telecom.where(system='phone')",
    "telecom": "telecom",
    "active": "active",
    "date": "period",
    "endpoint": "endpoint",
    "identifier": "identifier",
    "location": "location",
    "organization": "organization",
    "practitioner": "practitioner",
    "role": "code",
    "service": "healthcareService",
    "specialty": "specialty"
  },
  "PaymentNotice": {
    "created": "created",
    "identifier": "identifier",
    "payment-status": "paymentStatus",
    "provider": "provider",
    "request": "request",
    "response": "response",
    "status": "status"
  },
  "PaymentReconciliation": {
    "created": "created",
    "disposition": "disposition",
    "identifier": "identifier",
    "outcome": "outcome",
    "payment-issuer": "paymentIssuer",
    "request": "request",
    "requestor": "requestor",
    "status": "status"
  },
  "PlanDefinition": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "definition": "action.definition",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "type": "type",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Provenance": {
    "agent": "agent.who",
    "agent-role": "agent.role",
    "agent-type": "agent.type",
    "entity": "entity.what",
    "location": "location",
    "patient": "target.where(resolve() is Patient)",
    "recorded": "recorded",
    "signature-type": "signature.type",
    "target": "target"
  },
  "Questionnaire": {
    "code": "item.code",
    "context-type": "useContext.code",
    "date": "date",
    "definition": "item.definition",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "subject-type": "subjectType",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "QuestionnaireResponse": {
    "author": "author",
    "authored": "authored",
    "based-on": "basedOn",
    "encounter": "encounter",
    "identifier": "identifier",
    "part-of": "partOf",
    "patient": "subject.where(resolve() is Patient)",
    "questionnaire": "questionnaire",
    "source": "source",
    "status": "status",
    "subject": "subject"
  },
  "RequestGroup": {
    "author": "author",
    "authored": "authoredOn",
    "code": "code",
    "encounter": "encounter",
    "group-identifier": "groupIdentifier",
    "identifier": "identifier",
    "instantiates-canonical": "instantiatesCanonical",
    "instantiates-uri": "instantiatesUri",
    "intent": "intent",
    "participant": "action.participant",
    "patient": "subject.where(resolve() is Patient)",
    "priority": "priority",
    "status": "status",
    "subject": "subject"
  },
  "ResearchDefinition": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "ResearchElementDefinition": {
    "composed-of": "relatedArtifact.where(type='composed-of').resource",
    "context-type": "useContext.code",
    "date": "date",
    "depends-on": "relatedArtifact.where(type='depends-on').resource",
    "derived-from": "relatedArtifact.where(type='derived-from').resource",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "predecessor": "relatedArtifact.where(type='predecessor').resource",
    "publisher": "publisher",
    "status": "status",
    "successor": "relatedArtifact.where(type='successor').resource",
    "title": "title",
    "topic": "topic",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "ResearchStudy": {
    "category": "category",
    "date": "period",
    "focus": "focus",
    "identifier": "identifier",
    "keyword": "keyword",
    "location": "location",
    "partof": "partOf",
    "principalinvestigator": "principalInvestigator",
    "protocol": "protocol",
    "site": "site",
    "sponsor": "sponsor",
    "status": "status",
    "title": "title"
  },
  "ResearchSubject": {
    "date": "period",
    "identifier": "identifier",
    "individual": "individual",
    "patient": "individual",
    "status": "status",
    "study": "study"
  },
  "RiskEvidenceSynthesis": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "effective": "effectivePeriod",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "Schedule": {
    "active": "active",
    "actor": "actor",
    "date": "planningHorizon",
    "identifier": "identifier",
    "service-category": "serviceCategory",
    "service-type": "serviceType",
    "specialty": "specialty"
  },
  "Slot": {
    "appointment-type": "appointmentType",
    "identifier": "identifier",
    "schedule": "schedule",
    "service-category": "serviceCategory",
    "service-type": "serviceType",
    "specialty": "specialty",
    "start": "start",
    "status": "status"
  },
  "Specimen": {
    "accession": "accessionIdentifier",
    "bodysite": "collection.bodySite",
    "collected": "collection.collected",
    "collector": "collection.collector",
    "container": "container.type",
    "container-id": "container.identifier",
    "identifier": "identifier",
    "parent": "parent",
    "patient": "subject.where(resolve() is Patient)",
    "status": "status",
    "subject": "subject",
    "type": "type"
  },
  "SpecimenDefinition": {
    "container": "typeTested.container.type",
    "identifier": "identifier",
    "type": "typeCollected"
  },
  "Subscription": {
    "contact": "contact",
    "criteria": "criteria",
    "payload": "channel.payload",
    "status": "status",
    "type": "channel.type",
    "url": "channel.endpoint"
  },
  "Substance": {
    "category": "category",
    "code": "code",
    "container-identifier": "instance.identifier",
    "expiry": "instance.expiry",
    "identifier": "identifier",
    "quantity": "instance.quantity",
    "status": "status"
  },
  "SubstanceSpecification": { "code": "code.code" },
  "Task": {
    "authored-on": "authoredOn",
    "based-on": "basedOn",
    "business-status": "businessStatus",
    "code": "code",
    "encounter": "encounter",
    "focus": "focus",
    "group-identifier": "groupIdentifier",
    "identifier": "identifier",
    "intent": "intent",
    "modified": "lastModified",
    "owner": "owner",
    "part-of": "partOf",
    "patient": "for.where(resolve() is Patient)",
    "performer": "performerType",
    "period": "executionPeriod",
    "priority": "priority",
    "requester": "requester",
    "status": "status",
    "subject": "for"
  },
  "TestReport": {
    "identifier": "identifier",
    "issued": "issued",
    "participant": "participant.uri",
    "result": "result",
    "tester": "tester",
    "testscript": "testScript"
  },
  "TestScript": {
    "context-type": "useContext.code",
    "date": "date",
    "description": "description",
    "identifier": "identifier",
    "jurisdiction": "jurisdiction",
    "name": "name",
    "publisher": "publisher",
    "status": "status",
    "testscript-capability": "metadata.capability.description",
    "title": "title",
    "url": "url",
    "version": "version",
    "context-type-quantity": "useContext",
    "context-type-value": "useContext"
  },
  "VerificationResult": { "target": "target" }
}
